{"version":3,"file":"ConversationalFormWidget.js","sourceRoot":"","sources":["../../src/components/ConversationalFormWidget.tsx"],"names":[],"mappings":";AAAA,OAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAoB1D,MAAM,UAAU,wBAAwB,CAAC,EACvC,WAAW,GAAG,4BAA4B,EAC1C,WAAW,GAAG,WAAW,EACzB,KAAK,GAAG,OAAO,EACf,YAAY,EACZ,WAAW,EACX,OAAO,EACP,WAAW,GAAG,IAAI,EAClB,QAAQ,GAAG,QAAQ,EACnB,KAAK,GAAG,MAAM,EACd,MAAM,GAAG,OAAO,GACc;IAC9B,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEhD,SAAS,CAAC,GAAG,EAAE;QACb,6CAA6C;QAC7C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE,CAAC;YAC7C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,GAAG,cAAc,CAAC;YACzB,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;YACxB,IAAI,CAAC,IAAI;gBACP,kEAAkE,CAAC;YACrE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,uDAAuD;QACvD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC;YAC3C,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC;YACvB,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC;YACxB,IAAI,CAAC,IAAI;gBACP,mEAAmE,CAAC;YACtE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;QAED,WAAW,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,iBAAiB,GAAG,GAAG,EAAE;QAC7B,QAAQ,QAAQ,EAAE,CAAC;YACjB,KAAK,cAAc;gBACjB,OAAO,6BAA6B,CAAC;YACvC,KAAK,aAAa;gBAChB,OAAO,4BAA4B,CAAC;YACtC,KAAK,WAAW;gBACd,OAAO,0BAA0B,CAAC;YACpC,KAAK,UAAU;gBACb,OAAO,yBAAyB,CAAC;YACnC,KAAK,QAAQ,CAAC;YACd;gBACE,OAAO,UAAU,CAAC;QACtB,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,OAAO,uCAAqB,CAAC;IAC/B,CAAC;IAED,OAAO,CACL,cACE,SAAS,EAAE,8BAA8B,KAAK,IAAI,iBAAiB,EAAE,EAAE,EACvE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,YAExB,KAAC,kBAAkB,IACjB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,YAAY,EAC1B,WAAW,EAAE,WAAW,EACxB,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,WAAW,GACxB,GACE,CACP,CAAC;AACJ,CAAC","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ConversationalForm } from \"./ConversationalForm\";\r\n\r\ninterface ConversationalFormWidgetProps {\r\n  containerId?: string;\r\n  apiEndpoint?: string;\r\n  theme?: \"light\" | \"dark\";\r\n  onFormSubmit?: (data: any) => void;\r\n  onFormError?: (error: any) => void;\r\n  logoUrl?: string;\r\n  showPreview?: boolean;\r\n  position?:\r\n    | \"bottom-right\"\r\n    | \"bottom-left\"\r\n    | \"top-right\"\r\n    | \"top-left\"\r\n    | \"center\";\r\n  width?: string;\r\n  height?: string;\r\n}\r\n\r\nexport function ConversationalFormWidget({\r\n  containerId = \"conversational-form-widget\",\r\n  apiEndpoint = \"/api/chat\",\r\n  theme = \"light\",\r\n  onFormSubmit,\r\n  onFormError,\r\n  logoUrl,\r\n  showPreview = true,\r\n  position = \"center\",\r\n  width = \"100%\",\r\n  height = \"600px\",\r\n}: ConversationalFormWidgetProps) {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Inject Tailwind CSS if not already present\r\n    if (!document.querySelector(\"#tailwind-css\")) {\r\n      const link = document.createElement(\"link\");\r\n      link.id = \"tailwind-css\";\r\n      link.rel = \"stylesheet\";\r\n      link.href =\r\n        \"https://cdn.jsdelivr.net/npm/tailwindcss@2/dist/tailwind.min.css\";\r\n      document.head.appendChild(link);\r\n    }\r\n\r\n    // Inject Lucide React icons CSS if not already present\r\n    if (!document.querySelector(\"#lucide-css\")) {\r\n      const link = document.createElement(\"link\");\r\n      link.id = \"lucide-css\";\r\n      link.rel = \"stylesheet\";\r\n      link.href =\r\n        \"https://cdn.jsdelivr.net/npm/lucide-static@latest/font/lucide.css\";\r\n      document.head.appendChild(link);\r\n    }\r\n\r\n    setIsLoaded(true);\r\n  }, []);\r\n\r\n  const getPositionStyles = () => {\r\n    switch (position) {\r\n      case \"bottom-right\":\r\n        return \"fixed bottom-4 right-4 z-50\";\r\n      case \"bottom-left\":\r\n        return \"fixed bottom-4 left-4 z-50\";\r\n      case \"top-right\":\r\n        return \"fixed top-4 right-4 z-50\";\r\n      case \"top-left\":\r\n        return \"fixed top-4 left-4 z-50\";\r\n      case \"center\":\r\n      default:\r\n        return \"relative\";\r\n    }\r\n  };\r\n\r\n  if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`conversational-form-widget ${theme} ${getPositionStyles()}`}\r\n      style={{ width, height }}\r\n    >\r\n      <ConversationalForm\r\n        apiEndpoint={apiEndpoint}\r\n        onFormSubmit={onFormSubmit}\r\n        onFormError={onFormError}\r\n        logoUrl={logoUrl}\r\n        showPreview={showPreview}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]}