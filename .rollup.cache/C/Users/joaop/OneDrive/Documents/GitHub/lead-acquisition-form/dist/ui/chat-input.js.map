{"version":3,"file":"chat-input.js","sourceRoot":"","sources":["../../src/ui/chat-input.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAQpC,MAAM,UAAU,SAAS,CAAC,EACxB,aAAa,EACb,QAAQ,EACR,WAAW,GACI;IACf,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACjD,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAmB,IAAI,CAAC,CAAC;IAEtD,0CAA0C;IAC1C,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;YAClC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC;IACH,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEf,MAAM,YAAY,GAAG,CAAC,CAAkB,EAAE,EAAE;QAC1C,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9B,UAAU,CAAC,EAAE,CAAC,CAAC;QACjB,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,CAAC,CAAsB,EAAE,EAAE;QAChD,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACrC,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,YAAY,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,CACL,gBACE,QAAQ,EAAE,YAAY,EACtB,SAAS,EAAC,0CAA0C,aAEpD,KAAC,KAAK,IACJ,GAAG,EAAE,QAAQ,EACb,KAAK,EAAE,OAAO,EACd,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAC3C,UAAU,EAAE,cAAc,EAC1B,WAAW,EAAE,WAAW,IAAI,sBAAsB,EAClD,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAC,QAAQ,GAClB,EACF,KAAC,MAAM,IACL,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,MAAM,EACX,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,QAAQ,EACrC,SAAS,EAAC,UAAU,YAEpB,KAAC,IAAI,IAAC,SAAS,EAAC,SAAS,GAAG,GACrB,IACJ,CACR,CAAC;AACJ,CAAC","sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Send } from \"lucide-react\";\r\n\r\ninterface ChatInputProps {\r\n  onSendMessage: (message: string) => void;\r\n  disabled?: boolean;\r\n  placeholder?: string;\r\n}\r\n\r\nexport function ChatInput({\r\n  onSendMessage,\r\n  disabled,\r\n  placeholder,\r\n}: ChatInputProps) {\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  // Focus the input when it becomes enabled\r\n  React.useEffect(() => {\r\n    if (!disabled && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [disabled]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (message.trim() && !disabled) {\r\n      onSendMessage(message.trim());\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"flex items-center space-x-2 p-4 border-t\"\r\n    >\r\n      <Input\r\n        ref={inputRef}\r\n        value={message}\r\n        autoFocus={true}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder={placeholder || \"Type your message...\"}\r\n        disabled={disabled}\r\n        className=\"flex-1\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        size=\"icon\"\r\n        disabled={!message.trim() || disabled}\r\n        className=\"shrink-0\"\r\n      >\r\n        <Send className=\"h-4 w-4\" />\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n"]}