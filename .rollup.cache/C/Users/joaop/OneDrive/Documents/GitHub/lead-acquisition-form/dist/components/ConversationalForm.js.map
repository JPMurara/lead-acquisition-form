{"version":3,"file":"ConversationalForm.js","sourceRoot":"","sources":["../../src/components/ConversationalForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"../ui/button\";\r\nimport { Input } from \"../ui/input\";\r\nimport { Label } from \"../ui/label\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"../ui/card\";\r\nimport { Message, MessageList } from \"../ui/message\";\r\nimport { ChatInput } from \"../ui/chat-input\";\r\nimport { CheckCircle, CloudCog } from \"lucide-react\";\r\nimport { parseAIResponse, ExtractedData } from \"../lib/data-extraction\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"../ui/tabs\";\r\n\r\ninterface Message {\r\n  id: string;\r\n  role: \"user\" | \"assistant\" | \"system\";\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ConversationState {\r\n  messages: Message[];\r\n  formData: ExtractedData;\r\n  isTyping: boolean;\r\n}\r\n\r\ninterface ConversationalFormProps {\r\n  apiEndpoint?: string;\r\n  onFormSubmit?: (data: any) => void;\r\n  onFormError?: (error: any) => void;\r\n  logoUrl?: string;\r\n  showPreview?: boolean;\r\n}\r\n\r\nexport function ConversationalForm({\r\n  apiEndpoint = \"/api/chat\",\r\n  onFormSubmit,\r\n  onFormError,\r\n  logoUrl,\r\n  showPreview = true,\r\n}: ConversationalFormProps) {\r\n  const [conversationState, setConversationState] = useState<ConversationState>(\r\n    {\r\n      messages: [\r\n        {\r\n          id: \"1\",\r\n          role: \"assistant\",\r\n          content:\r\n            \"Hi! I'm here to help you with your loan application. What loan amount are you considering? Please note that we only work with amounts between $1,000 and $40,000.\",\r\n          timestamp: new Date(),\r\n        },\r\n      ],\r\n      formData: {},\r\n      isTyping: false,\r\n    }\r\n  );\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleSubmitApplication = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      const formattedChatHistory = conversationState.messages\r\n        .map((msg) => `${msg.role.toUpperCase()}: ${msg.content}`)\r\n        .join(\"\\n\\n\");\r\n\r\n      const submissionData = {\r\n        loanAmount: conversationState.formData.loanAmount as number,\r\n        loanType: conversationState.formData.loanType as string,\r\n        name: conversationState.formData.name as string,\r\n        email: conversationState.formData.email as string,\r\n        phone: conversationState.formData.phone as string,\r\n        chatHistory: formattedChatHistory,\r\n      };\r\n\r\n      // Call the external API endpoint\r\n      const response = await fetch(apiEndpoint.replace('/chat', '/submit'), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(submissionData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (!result.success) {\r\n        throw new Error(result.error || \"Failed to submit lead\");\r\n      }\r\n\r\n      if (onFormSubmit) {\r\n        onFormSubmit(submissionData);\r\n      }\r\n\r\n      setIsSubmitted(true);\r\n    } catch (err) {\r\n      console.error(\"Error submitting form:\", err);\r\n      if (onFormError) {\r\n        onFormError(err);\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [conversationState.messages]);\r\n\r\n  const handleSendMessage = async (userMessage: string) => {\r\n    const userMsg: Message = {\r\n      id: Date.now().toString(),\r\n      role: \"user\",\r\n      content: userMessage,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setConversationState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, userMsg],\r\n      isTyping: true,\r\n    }));\r\n\r\n    try {\r\n      const transformedMessageData = [\r\n        ...conversationState.messages,\r\n        userMsg,\r\n      ].map((m) => ({ role: m.role, content: m.content }));\r\n\r\n      // Send the user message to the external API\r\n      const response = await fetch(apiEndpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          messages: transformedMessageData,\r\n          formData: conversationState.formData,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      // Extract data from AI response (only on final confirmation)\r\n      const extractedData = parseAIResponse(data.response);\r\n      const updatedFormData = {\r\n        ...conversationState.formData,\r\n        ...extractedData,\r\n      };\r\n\r\n      const assistantMsg: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content: data.response,\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      setConversationState((prev) => ({\r\n        ...prev,\r\n        messages: [...prev.messages, assistantMsg],\r\n        formData: updatedFormData,\r\n        isTyping: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      if (onFormError) {\r\n        onFormError(error);\r\n      }\r\n      const errorMsg: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content: \"I apologize, but I encountered an error. Please try again.\",\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      setConversationState((prev) => ({\r\n        ...prev,\r\n        messages: [...prev.messages, errorMsg],\r\n        isTyping: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const isFormComplete =\r\n    conversationState.formData.name &&\r\n    conversationState.formData.email &&\r\n    conversationState.formData.phone &&\r\n    conversationState.formData.loanAmount &&\r\n    conversationState.formData.loanType;\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <Card className=\"w-full max-w-4xl mx-auto\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-green-600 flex items-center gap-2\">\r\n            <CheckCircle className=\"h-6 w-6\" />\r\n            Thank You!\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Your loan application has been submitted successfully. We'll be in\r\n            touch soon!\r\n          </CardDescription>\r\n        </CardHeader>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\">\r\n      <Tabs defaultValue=\"chat\" className=\"w-full h-full flex flex-col\">\r\n        <TabsList className=\"grid w-full grid-cols-2 flex-shrink-0\">\r\n          <TabsTrigger value=\"chat\">Chat Assistant</TabsTrigger>\r\n          {showPreview && <TabsTrigger value=\"preview\">Application Preview</TabsTrigger>}\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"chat\" className=\"flex-1 mt-4 min-h-0\">\r\n          <Card className=\"h-full flex flex-col\">\r\n            <CardHeader className=\"flex-shrink-0\">\r\n              <div className=\"flex flex-row items-center justify-between\">\r\n                {logoUrl && (\r\n                  <img\r\n                    src={logoUrl}\r\n                    alt=\"Company Logo\"\r\n                    className=\"w-20 h-auto\"\r\n                  />\r\n                )}\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  Loan Assistant\r\n                </CardTitle>\r\n              </div>\r\n              <CardDescription>\r\n                Chat with our virtual assistant to complete your application\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"flex-1 flex flex-col p-0 min-h-0\">\r\n              <div className=\"flex-1 overflow-y-auto\">\r\n                <MessageList>\r\n                  {conversationState.messages.map((message) => (\r\n                    <Message\r\n                      key={message.id}\r\n                      role={message.role}\r\n                      content={message.content}\r\n                      timestamp={message.timestamp}\r\n                    />\r\n                  ))}\r\n                  {conversationState.isTyping && (\r\n                    <Message role=\"assistant\" content=\"\" isTyping={true} />\r\n                  )}\r\n                  <div ref={messagesEndRef} />\r\n                </MessageList>\r\n              </div>\r\n              {isFormComplete ? (\r\n                <>\r\n                  <div className=\"p-4 border-t flex-shrink-0\">\r\n                    <Button\r\n                      onClick={handleSubmitApplication}\r\n                      className=\"w-full\"\r\n                      disabled={!isFormComplete || isSubmitting}\r\n                    >\r\n                      {isSubmitting ? \"Submitting...\" : \"Submit Application\"}\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"flex-shrink-0\">\r\n                  <ChatInput\r\n                    onSendMessage={handleSendMessage}\r\n                    disabled={conversationState.isTyping || !!isFormComplete}\r\n                    placeholder={\"Type your message...\"}\r\n                  />\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {showPreview && (\r\n          <TabsContent value=\"preview\" className=\"flex-1 mt-4 min-h-0\">\r\n            <Card className=\"h-full flex flex-col\">\r\n              <CardHeader className=\"flex-shrink-0\">\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  Form Preview\r\n                </CardTitle>\r\n                <CardDescription>\r\n                  Your information will be filled as we chat\r\n                </CardDescription>\r\n              </CardHeader>\r\n              <CardContent className=\"flex-1 overflow-y-auto\">\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Loan Amount</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={\r\n                          conversationState.formData.loanAmount\r\n                            ? `$${conversationState.formData.loanAmount.toLocaleString()}`\r\n                            : \"\"\r\n                        }\r\n                        placeholder=\"Will be filled from conversation\"\r\n                        disabled\r\n                        className=\"bg-gray-50\"\r\n                      />\r\n                      {conversationState.formData.loanAmount && (\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Loan Type</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={conversationState.formData.loanType || \"\"}\r\n                        placeholder=\"Will be filled from conversation\"\r\n                        disabled\r\n                        className=\"bg-gray-50\"\r\n                      />\r\n                      {conversationState.formData.loanType && (\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Full Name</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={conversationState.formData.name || \"\"}\r\n                        placeholder=\"Will be filled from conversation\"\r\n                        disabled\r\n                        className=\"bg-gray-50\"\r\n                      />\r\n                      {conversationState.formData.name && (\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Email Address</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={conversationState.formData.email || \"\"}\r\n                        placeholder=\"Will be filled from conversation\"\r\n                        disabled\r\n                        className=\"bg-gray-50\"\r\n                      />\r\n                      {conversationState.formData.email && (\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Phone Number</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={conversationState.formData.phone || \"\"}\r\n                        placeholder=\"Will be filled from conversation\"\r\n                        disabled\r\n                        className=\"bg-gray-50\"\r\n                      />\r\n                      {conversationState.formData.phone && (\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label>Chat History</Label>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Input\r\n                        value={conversationState.messages\r\n                          .map(\r\n                            (msg) => `${msg.role.toUpperCase()}: ${msg.content}`\r\n                          )\r\n                          .join(\"\\n\\n\")}\r\n                        placeholder=\"Will be filled from conversation\"\r\n                        disabled\r\n                        className=\"bg-gray-50\"\r\n                      />\r\n                      {conversationState.messages && (\r\n                        <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </TabsContent>\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n"]}