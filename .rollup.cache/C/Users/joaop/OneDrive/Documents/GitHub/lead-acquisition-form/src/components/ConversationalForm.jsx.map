{"version":3,"file":"ConversationalForm.jsx","sourceRoot":"","sources":["ConversationalForm.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\r\n\r\nimport { useForm } from \"@tanstack/react-form\";\r\nimport { z } from \"zod\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Message, MessageList } from \"@/components/ui/message\";\r\nimport { ChatInput } from \"@/components/ui/chat-input\";\r\nimport { CheckCircle, User, Bot } from \"lucide-react\";\r\nimport {\r\n  parseAIResponse,\r\n  ExtractedData,\r\n  determineNextStep,\r\n  shouldShowSubmitButton,\r\n} from \"@/lib/data-extraction\";\r\n\r\n// Updated Zod schema to include chat history\r\nconst conversationalFormSchema = z.object({\r\n  loanAmount: z\r\n    .number()\r\n    .min(1000, \"Loan amount must be at least $1,000\")\r\n    .max(40000, \"Loan amount must be no more than $40,000\"),\r\n  loanType: z.string().min(1, \"Loan type is required\"),\r\n  name: z\r\n    .string()\r\n    .min(1, \"Name is required\")\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .max(50, \"Name must be less than 50 characters\"),\r\n  email: z\r\n    .string()\r\n    .min(1, \"Email is required\")\r\n    .email(\"Please enter a valid email address\"),\r\n  phone: z\r\n    .string()\r\n    .min(1, \"Phone number is required\")\r\n    .regex(\r\n      /^[\\+]?[1-9][\\d\\s\\-\\(\\)]{7,15}$/,\r\n      \"Please enter a valid phone number\"\r\n    ),\r\n  chatHistory: z.string().optional(), // Hidden field for chat history\r\n});\r\n\r\ntype FormData = z.infer<typeof conversationalFormSchema>;\r\n\r\ninterface Message {\r\n  id: string;\r\n  role: \"user\" | \"assistant\" | \"system\";\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ConversationState {\r\n  currentStep: \"loan_amount\" | \"loan_type\" | \"personal_details\" | \"complete\";\r\n  messages: Message[];\r\n  formData: ExtractedData;\r\n  isTyping: boolean;\r\n}\r\n\r\nexport function ConversationalForm() {\r\n  const [conversationState, setConversationState] = useState<ConversationState>(\r\n    {\r\n      currentStep: \"loan_amount\",\r\n      messages: [\r\n        {\r\n          id: \"1\",\r\n          role: \"assistant\",\r\n          content:\r\n            \"Hi! I'm here to help you with your loan application. What loan amount are you considering? Please note that we only work with amounts between $1,000 and $40,000.\",\r\n          timestamp: new Date(),\r\n        },\r\n      ],\r\n      formData: {},\r\n      isTyping: false,\r\n    }\r\n  );\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const form = useForm({\r\n    defaultValues: {\r\n      loanAmount: \"\", // Change from undefined to empty string\r\n      loanType: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      chatHistory: \"\",\r\n    },\r\n    onSubmit: async ({ value }) => {\r\n      setIsSubmitting(true);\r\n      try {\r\n        // Format chat history before submission\r\n        const formattedChatHistory = conversationState.messages\r\n          .map((msg) => `${msg.role.toUpperCase()}: ${msg.content}`)\r\n          .join(\"\\n\\n\");\r\n\r\n        const submissionData = {\r\n          ...value,\r\n          chatHistory: formattedChatHistory,\r\n        };\r\n\r\n        const validatedData = conversationalFormSchema.parse(submissionData);\r\n        await new Promise((resolve) => setTimeout(resolve, 1000));\r\n        console.log(\"Form submitted:\", validatedData);\r\n        setIsSubmitted(true);\r\n      } catch (error) {\r\n        console.error(\"Error submitting form:\", error);\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [conversationState.messages]);\r\n\r\n  // Update the useEffect to also handle chatHistory updates\r\n  useEffect(() => {\r\n    console.log(\r\n      \"useEffect triggered with formData:\",\r\n      conversationState.formData\r\n    );\r\n\r\n    // Create a complete form data object including chat history\r\n    const completeFormData = {\r\n      ...conversationState.formData,\r\n      chatHistory: conversationState.messages\r\n        .map((msg) => `${msg.role.toUpperCase()}: ${msg.content}`)\r\n        .join(\"\\n\\n\"),\r\n    };\r\n\r\n    Object.entries(completeFormData).forEach(([field, value]) => {\r\n      console.log(`Processing field: ${field}, value: ${value}`);\r\n\r\n      if (value !== undefined && value !== null && value !== \"\") {\r\n        console.log(`Setting field: ${field} to value: ${value}`);\r\n        try {\r\n          // Convert loanAmount to string for the form\r\n          const formValue =\r\n            field === \"loanAmount\" && typeof value === \"number\"\r\n              ? value.toString()\r\n              : value;\r\n          form.setFieldValue(field as keyof FormData, formValue);\r\n          console.log(`Successfully set ${field} to ${formValue}`);\r\n        } catch (error) {\r\n          console.error(`Error setting field ${field}:`, error);\r\n        }\r\n      } else {\r\n        console.log(`Skipping field ${field} - value is falsy: ${value}`);\r\n      }\r\n    });\r\n  }, [conversationState.formData, conversationState.messages]); // Add messages to dependency\r\n\r\n  const handleSendMessage = async (userMessage: string) => {\r\n    const userMsg: Message = {\r\n      id: Date.now().toString(),\r\n      role: \"user\",\r\n      content: userMessage,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setConversationState((prev) => ({\r\n      ...prev,\r\n      messages: [...prev.messages, userMsg],\r\n      isTyping: true,\r\n    }));\r\n\r\n    try {\r\n      const response = await fetch(\"/api/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          messages: [...conversationState.messages, userMsg],\r\n          currentStep: conversationState.currentStep,\r\n          formData: conversationState.formData,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      // Extract data from AI response (only on final confirmation)\r\n      const extractedData = parseAIResponse(\r\n        data.response,\r\n        conversationState.currentStep\r\n      );\r\n\r\n      const updatedFormData = {\r\n        ...conversationState.formData,\r\n        ...extractedData,\r\n      };\r\n\r\n      const nextStep = determineNextStep(\r\n        conversationState.currentStep,\r\n        updatedFormData\r\n      );\r\n\r\n      const assistantMsg: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content: data.response,\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      setConversationState((prev) => ({\r\n        ...prev,\r\n        messages: [...prev.messages, assistantMsg],\r\n        formData: updatedFormData,\r\n        currentStep: nextStep as any,\r\n        isTyping: false,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      const errorMsg: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content: \"I apologize, but I encountered an error. Please try again.\",\r\n        timestamp: new Date(),\r\n      };\r\n\r\n      setConversationState((prev) => ({\r\n        ...prev,\r\n        messages: [...prev.messages, errorMsg],\r\n        isTyping: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Add function to handle chat submission\r\n  const handleChatSubmission = async () => {\r\n    if (isFormComplete) {\r\n      await form.handleSubmit();\r\n    }\r\n  };\r\n\r\n  const getStepProgress = () => {\r\n    const steps = [\"loan_amount\", \"loan_type\", \"personal_details\"];\r\n    const currentIndex = steps.indexOf(conversationState.currentStep);\r\n    return Math.max(0, currentIndex);\r\n  };\r\n\r\n  const isFormComplete =\r\n    conversationState.formData.name &&\r\n    conversationState.formData.email &&\r\n    conversationState.formData.phone &&\r\n    conversationState.formData.loanAmount &&\r\n    conversationState.formData.loanType;\r\n\r\n  if (isSubmitted) {\r\n    return (\r\n      <Card className=\"w-full max-w-4xl mx-auto\">\r\n        <CardHeader>\r\n          <CardTitle className=\"text-green-600 flex items-center gap-2\">\r\n            <CheckCircle className=\"h-6 w-6\" />\r\n            Thank You!\r\n          </CardTitle>\r\n          <CardDescription>\r\n            Your loan application has been submitted successfully. We'll be in\r\n            touch soon!\r\n          </CardDescription>\r\n        </CardHeader>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full max-w-4xl mx-auto space-y-6\">\r\n      {/* Progress Indicator */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg\">Loan Application Progress</CardTitle>\r\n          <CardDescription>\r\n            Step {getStepProgress() + 1} of 3:{\" \"}\r\n            {conversationState.currentStep === \"loan_amount\"\r\n              ? \"Loan Amount\"\r\n              : conversationState.currentStep === \"loan_type\"\r\n              ? \"Loan Type\"\r\n              : conversationState.currentStep === \"personal_details\"\r\n              ? \"Personal Details\"\r\n              : \"Complete\"}\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex space-x-2\">\r\n            {[\"loan_amount\", \"loan_type\", \"personal_details\"].map(\r\n              (step, index) => {\r\n                const isCompleted =\r\n                  conversationState.formData[\r\n                    step === \"loan_amount\"\r\n                      ? \"loanAmount\"\r\n                      : step === \"loan_type\"\r\n                      ? \"loanType\"\r\n                      : \"name\"\r\n                  ];\r\n                const isCurrent = conversationState.currentStep === step;\r\n\r\n                return (\r\n                  <div\r\n                    key={step}\r\n                    className={`flex-1 h-2 rounded-full ${\r\n                      isCompleted\r\n                        ? \"bg-green-500\"\r\n                        : isCurrent\r\n                        ? \"bg-blue-500\"\r\n                        : \"bg-gray-200\"\r\n                    }`}\r\n                  />\r\n                );\r\n              }\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Chat Interface */}\r\n        <Card className=\"h-[600px] flex flex-col\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <Bot className=\"h-5 w-5\" />\r\n              Loan Assistant\r\n            </CardTitle>\r\n            <CardDescription>\r\n              Chat with our AI assistant to complete your application\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"flex-1 flex flex-col p-0 overflow-y-auto\">\r\n            <div className=\"flex-1 overflow-y-auto\">\r\n              <MessageList>\r\n                {conversationState.messages.map((message) => (\r\n                  <Message\r\n                    key={message.id}\r\n                    role={message.role}\r\n                    content={message.content}\r\n                    timestamp={message.timestamp}\r\n                  />\r\n                ))}\r\n                {conversationState.isTyping && (\r\n                  <Message role=\"assistant\" content=\"\" isTyping={true} />\r\n                )}\r\n                <div ref={messagesEndRef} />\r\n              </MessageList>\r\n            </div>\r\n            {shouldShowSubmitButton(\r\n              conversationState.messages[conversationState.messages.length - 1]\r\n                ?.content || \"\",\r\n              conversationState.formData,\r\n              conversationState.currentStep\r\n            ) ? (\r\n              <div className=\"p-4 border-t\">\r\n                <Button\r\n                  onClick={handleChatSubmission}\r\n                  disabled={isSubmitting}\r\n                  className=\"w-full h-12 text-lg font-semibold\"\r\n                >\r\n                  {isSubmitting ? (\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent\"></div>\r\n                      Submitting Application...\r\n                    </div>\r\n                  ) : (\r\n                    \"Submit Application\"\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <ChatInput\r\n                onSendMessage={handleSendMessage}\r\n                disabled={conversationState.isTyping || isFormComplete}\r\n                placeholder={\r\n                  conversationState.currentStep === \"loan_amount\"\r\n                    ? \"Enter loan amount...\"\r\n                    : conversationState.currentStep === \"loan_type\"\r\n                    ? \"Choose loan type...\"\r\n                    : \"Provide your details...\"\r\n                }\r\n              />\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Form Preview */}\r\n        <Card className=\"h-[600px] flex flex-col\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <User className=\"h-5 w-5\" />\r\n              Application Summary\r\n            </CardTitle>\r\n            <CardDescription>\r\n              Your information will be filled as we chat\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"flex-1 flex flex-col\">\r\n            <div className=\"flex-1 space-y-4\">\r\n              {/* Loan Amount */}\r\n              <div className=\"space-y-2\">\r\n                <Label>Loan Amount</Label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Input\r\n                    value={\r\n                      conversationState.formData.loanAmount\r\n                        ? `$${conversationState.formData.loanAmount.toLocaleString()}`\r\n                        : \"\"\r\n                    }\r\n                    placeholder=\"Will be filled from conversation\"\r\n                    disabled\r\n                    className=\"bg-gray-50\"\r\n                  />\r\n                  {conversationState.formData.loanAmount && (\r\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Loan Type */}\r\n              <div className=\"space-y-2\">\r\n                <Label>Loan Type</Label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Input\r\n                    value={conversationState.formData.loanType || \"\"}\r\n                    placeholder=\"Will be filled from conversation\"\r\n                    disabled\r\n                    className=\"bg-gray-50\"\r\n                  />\r\n                  {conversationState.formData.loanType && (\r\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Personal Details */}\r\n              <div className=\"space-y-2\">\r\n                <Label>Full Name</Label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Input\r\n                    value={conversationState.formData.name || \"\"}\r\n                    placeholder=\"Will be filled from conversation\"\r\n                    disabled\r\n                    className=\"bg-gray-50\"\r\n                  />\r\n                  {conversationState.formData.name && (\r\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label>Email Address</Label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Input\r\n                    value={conversationState.formData.email || \"\"}\r\n                    placeholder=\"Will be filled from conversation\"\r\n                    disabled\r\n                    className=\"bg-gray-50\"\r\n                  />\r\n                  {conversationState.formData.email && (\r\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label>Phone Number</Label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Input\r\n                    value={conversationState.formData.phone || \"\"}\r\n                    placeholder=\"Will be filled from conversation\"\r\n                    disabled\r\n                    className=\"bg-gray-50\"\r\n                  />\r\n                  {conversationState.formData.phone && (\r\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div className=\"pt-4 border-t\">\r\n              <Button\r\n                onClick={() => form.handleSubmit()}\r\n                className=\"w-full\"\r\n                disabled={!isFormComplete || isSubmitting}\r\n              >\r\n                {isSubmitting ? \"Submitting...\" : \"Submit Application\"}\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]}